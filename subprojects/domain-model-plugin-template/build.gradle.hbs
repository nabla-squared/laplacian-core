plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'maven-publish'
    id 'jacoco'
}

group = '{{project.group}}'
version = '{{project.version}}'

repositories {
    maven {
        url 'https://raw.github.com/nabla-squared/maven-repo/main/'
    }
    mavenCentral()
}

def cacheDir = "${System.getenv('HOME')}/.laplacian/cache"

{{define 'dependent_plugin_jars'
  (map laplacian.args.plugins '(replace @it ".*/" "")')
~}}
dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'laplacian:laplacian-generator-api:1.0.0'
    {{#each dependent_plugin_jars as |jar| ~}}
    implementation files("$cacheDir/{{jar}}")
    {{/each}}
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "$kotlinJvmTarget"
    }
}
{{define 'plugin_id' (concat project.group '.' project.name '-plugin') ~}}
{{define 'dependent_plugin_names'
  (filter
    (map dependent_plugin_jars '(replace @it "(.*)-.*" "$1")')
    '(neq @it plugin_id)'
  )
~}}
jar {
    manifest {
        attributes(
            'Plugin-Class': '{{project.namespace}}.plugin.{{upper-camel project.name}}Plugin',
            'Plugin-Dependencies': '{{#each dependent_plugin_names as |name|}}{{name}}{{if (not @last) ', '}}{{/each}}',
            'Plugin-Id': '{{plugin_id}}',
            'Plugin-Version': '{{project.version}}',
        )
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.5"
}
